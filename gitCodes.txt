1. git init  //acilan dosyada bir git bolumu acar   // Working Area --> Staging --> Local Repo --> Remote Repo
2. git status // statuye bakar her seferinde yapilmali
3. git add chapter.txt --> git add . --> git -all  // dosyalar eklenir Staging bolumune -->move to stage
4. git status
5. git commit -m "Complete Chapter 1"  // -m => message demek --> Staging to Local Repo committed!
5. git commit -am "message" : --> stage and commit at the same time --> shorter version 
6. git log --> Checks git history ==> git config --global alias.history "log --graph --oneline --decorate" // shortcut for ->git history
7. git diff chapter.txt // eski chapterla olan farkliliklari gorebilirsin
8. git checkout chapter.txt // eski yaptigin versiyona gitme	
9. git remote add origin https:github.com/cyberturk01/"RepositoryName" // githuba yukler
10.git push -u origin master

From Remote Repo 
1. git clone https://github.com/cyberturk01/github.git --> write the cloning address
CLonining = git clone https:github.com/cyberturk01/"RepositoryName" // hangi dosyayi indirmek istiyorsan

Eklenen dosyalari cikarma= git rm --cached -r . /// butun eklenen dosyalari cikarir committen once yapilir

Merge= git merge newBranchName // Master branch ta iken yeni branchin dosyalarini kullanmak icin kullanilir
Push= git push -u origin master  // Master brancha son dosyayi gonderme

#BRANCH
git branch demo --> yeni branch olusturu
git checkout demo --> yeni brancha gecer
Git from Branch(Demo) to Origin
git merge master --> branch icerisinde masterdaki son haline update yapar
git push --set-upstream origin <branchName>
Siteden pull request yapilacak
Branch= git branch newBranchName //yeni bir dal ve kullanici olusturma icin kullanilir
Branch Check = git branch  // Hangi branch aktiv gosterir.
Kullanici veya Versiyon Degistirme= git checkout branchName


#GitIgnore
GitIgnore olusturma= touch .gitignore
git config --global core.excludesfile ~/.gitignore_global
